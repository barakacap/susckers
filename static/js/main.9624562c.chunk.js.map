{"version":3,"sources":["candy-machine.ts","components/Header.tsx","components/Footer.tsx","assets/69.png","assets/375.png","assets/286.png","assets/120.png","assets/531.png","assets/78.png","components/Carousel.js","Home.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","candyMachine","id","account","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","goLiveDate","Date","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","wallet","mintOneToken","config","treasury","Keypair","generate","publicKey","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","span","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","shortenAddress","address","chars","slice","ms","Header","className","Footer","Carousel","useState","animation","setAnimation","opacity","setOpacity","index","setIndex","imgPercent","useEffect","classes","iP","width","document","getElementById","clientWidth","p","img6","img2","transform","setInterval","transition","Math","floor","img1","img3","img4","img5","style","alt","src","ConnectButton","styled","WalletDialogButton","CounterText","MintContainer","div","MintButton","Button","renderCounter","days","hours","minutes","seconds","completed","Home","props","balance","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","setItemsAvailable","setItemsRedeemed","setItemsRemaining","open","message","severity","undefined","alertState","setAlertState","startDate","setStartDate","useAnchorWallet","setCandyMachine","refreshCandyMachineState","onMint","mintTxId","txTimeout","msg","code","indexOf","getBalance","LAMPORTS_PER_SOL","setDays","setHours","setMinutes","setSeconds","timerFinished","setTimerFinished","visible","setVisible","countDownDate","UTC","getTime","timer","now","distance","clearInterval","HomeBackgroundImage","display","flexDirection","alignItems","toBase58","toLocaleString","disabled","onClick","variant","backgroundColor","color","CircularProgress","date","onMount","onComplete","renderer","Snackbar","autoHideDuration","onClose","Alert","href","process","network","Connection","startDateSeed","parseInt","theme","createTheme","palette","type","overrides","MuiButtonBase","root","justifyContent","MuiButton","textTransform","padding","startIcon","marginRight","endIcon","marginLeft","App","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","autoConnect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9624562c.chunk.js","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result: any, context: any) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  });\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  let goLiveDate = state.data.goLiveDate.toNumber();\n  goLiveDate = new Date(goLiveDate * 1000);\n\n  console.log({\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  })\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet(payer, mint.publicKey);\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n\n  return await program.rpc.mintNft({\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  });\n}\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}","import React from 'react'\r\nimport '../styles/Header.css'\r\nfunction Header() {\r\n    return (\r\n        <div className='Header'>\r\n            <div className='Header-top'>\r\n                <h3 className='Header-title'>Solana Suckers</h3>\r\n            </div>\r\n            {/* <div className='Header-bottom'>\r\n                <a className='Header-navTitle Header-hometitle'  >HOME</a>\r\n                <a className='Header-navTitle'>DISCORD</a>\r\n                <a className='Header-navTitle'>RIVERMAP</a>\r\n                <a className='Header-navTitle'>FAQ</a>\r\n                <a className='Header-navTitle'>MINT</a>\r\n                <a className='Header-menuIcon'>\r\n                    <svg viewBox=\"0 -5 34 34\" fill=\"currentColor\" width=\"40px\" height=\"40px\" data-ux=\"IconHamburger\" className=\"x-el x-el-svg c2-1 c2-2 c2-s c2-t c2-u c2-v c2-w c2-x c2-y c2-3 c2-4 c2-5 c2-6 c2-7 c2-8\"><g><path fillRule=\"evenodd\" d=\"M4 8h16V6H4z\"></path><path fillRule=\"evenodd\" d=\"M4 13.096h16v-2.001H4z\"></path><path fillRule=\"evenodd\" d=\"M4 18.346h16v-2H4z\"></path></g></svg>\r\n                </a>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport '../styles/Footer.css'\r\nfunction Footer() {\r\n    return (\r\n        <div className='Footer'>\r\n            <span className='Footer-text'>Copyright © 2021 Solana Suckers - All Rights Reserved.</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export default __webpack_public_path__ + \"static/media/69.f08aca76.png\";","export default __webpack_public_path__ + \"static/media/375.edbc7b2f.png\";","export default __webpack_public_path__ + \"static/media/286.3c935129.png\";","export default __webpack_public_path__ + \"static/media/120.ad72aba1.png\";","export default __webpack_public_path__ + \"static/media/531.11fe3d4a.png\";","export default __webpack_public_path__ + \"static/media/78.339bcd86.png\";","import React, { useEffect, useState } from 'react'\r\nimport '../styles/Carousel.css'\r\nimport img1 from \"../assets/69.png\";\r\nimport img2 from \"../assets/375.png\";\r\nimport img3 from \"../assets/286.png\";\r\nimport img4 from \"../assets/120.png\";\r\nimport img5 from \"../assets/531.png\";\r\nimport img6 from \"../assets/78.png\";\r\n\r\nfunction Carousel() {\r\n    const[animation,setAnimation]=useState({})\r\n    const[opacity,setOpacity]=useState({})\r\n    const[index,setIndex]=useState(0)\r\n    let imgPercent=[210/(210*11)]*100;\r\n    useEffect(()=>{\r\n        let classes={};\r\n        let imgPercent=[210/(210*11)]*100;\r\n        let iP=(605+(600-((1115-630)/2)))/(605*11)*100;\r\n  \r\n        let width=document.getElementById('Carousel-Body').clientWidth;\r\n        \r\n        if(width===290){\r\n            iP=16.72;\r\n        }\r\n        if(width===330){\r\n            iP=15.85;\r\n        }\r\n    \r\n        let p=iP;\r\n        setOpacity({img6:{opacity:0.5},img2:{opacity:0.5}})\r\n      \r\n        classes={transform:`translateX(-${iP}%)` };\r\n        setAnimation(classes)\r\n        \r\n        p+=imgPercent;\r\n    \r\n        setInterval(()=>{\r\n            \r\n            classes={transform:`translateX(-${p}%)`,transition: \"transform 500ms ease-in-out 0s\" };\r\n            setAnimation(classes)\r\n            setIndex(p)\r\n            if(Math.floor(p)===(Math.floor(iP+(imgPercent*6)))){\r\n            \r\n                p=iP\r\n                \r\n                setTimeout(()=>{\r\n                    \r\n                    classes={transform:`translateX(-${iP}%)` };\r\n                    setAnimation(classes)\r\n                    setIndex(iP)\r\n                    p+=imgPercent;\r\n                    \r\n                },[500])\r\n                    \r\n            }\r\n            else{\r\n               \r\n                p+=imgPercent;\r\n                \r\n            }\r\n            \r\n        }, 1500);\r\n    \r\n        \r\n    },[])\r\n \r\n    useEffect(()=>{\r\n        let iP=(605+(600-((1115-630)/2)))/(605*11)*100;\r\n        \r\n        let width=document.getElementById('Carousel-Body').clientWidth;\r\n        \r\n        if(width===290){\r\n            iP=16.72;\r\n        }\r\n        if(width===330){\r\n            iP=15.85;\r\n        }\r\n        \r\n        switch(Math.floor(index)){\r\n            case Math.floor(iP):\r\n                setOpacity({img6:{opacity:0.4},img2:{opacity:0.4}})\r\n                break;\r\n            case Math.floor(iP+(imgPercent)):\r\n                setOpacity({img1:{opacity:0.4},img3:{opacity:0.4}})\r\n                break;\r\n            case Math.floor(iP+(imgPercent*2)):\r\n                setOpacity({img2:{opacity:0.4},img4:{opacity:0.4}})\r\n                break;\r\n            case Math.floor(iP+(imgPercent*3)):\r\n                setOpacity({img3:{opacity:0.4},img5:{opacity:0.4}})\r\n                break;\r\n            case Math.floor(iP+(imgPercent*4)):\r\n                setOpacity({img4:{opacity:0.4},img6:{opacity:0.4}})\r\n                break;\r\n            case Math.floor(iP+(imgPercent*5)):\r\n                setOpacity({img5:{opacity:0.4},img1:{opacity:0.4}})\r\n                break;\r\n            case Math.floor(iP+(imgPercent*6)):\r\n                setOpacity({img6:{opacity:0.4},img2:{opacity:0.4}})\r\n                break;\r\n        }\r\n    },[index])\r\n    \r\n    return (\r\n        <div className='Carousel'>\r\n            \r\n            <div className='Carousel-Header'>\r\n\r\n                <span className='Carousel-Header-title'>Solana Suckers Collection</span>\r\n                <div className='Carousel-Divider'></div>\r\n            </div>\r\n            <div  className='Carousel-Body' id='Carousel-Body'>\r\n                <div className='Carousel-InnerBody' style={animation}  id='Carousel-InnerBody'>\r\n                    <img style={opacity.img5} alt=\"\" src={img5} className=\"Carousel-BodyImage\"></img>\r\n                    <img style={opacity.img6} alt=\"\" src={img6} className=\"Carousel-BodyImage\"></img>\r\n                    <img style={opacity.img1} alt=\"\" src={img1} className=\"Carousel-BodyImage\"></img>\r\n                    <img style={opacity.img2} alt=\"\" src={img2} className=\"Carousel-BodyImage\"></img>\r\n                    <img style={opacity.img3} alt=\"\" src={img3} className=\"Carousel-BodyImage\"></img>\r\n                    <img style={opacity.img4} alt=\"\" src={img4} className=\"Carousel-BodyImage\"></img>\r\n    \r\n                    <img style={opacity.img5} alt=\"\" src={img5} className=\"Carousel-BodyImage\"></img>\r\n                    <img style={opacity.img6} alt=\"\" src={img6} className=\"Carousel-BodyImage\"></img>\r\n                    <img style={opacity.img1} alt=\"\" src={img1} className=\"Carousel-BodyImage\"></img>\r\n                    <img style={opacity.img2} alt=\"\" src={img2} className=\"Carousel-BodyImage\"></img>\r\n                    <img style={opacity.img3} alt=\"\" src={img3} className=\"Carousel-BodyImage\"></img>\r\n                </div>\r\n            </div>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel\r\n\r\n\r\n\r\n","import Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport \"./styles/Home.css\"\r\nimport HomeBackgroundImage from './assets/69.png'\r\nimport Carousel from './components/Carousel'\r\nimport MoveModal from './misc/AnimateModal'\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Countdown from \"react-countdown\";\r\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport * as anchor from \"@project-serum/anchor\";\r\n\r\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\r\n\r\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\r\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\r\n\r\nimport {\r\n  CandyMachine,\r\n  awaitTransactionSignatureConfirmation,\r\n  getCandyMachineState,\r\n  mintOneToken,\r\n  shortenAddress,\r\n} from \"./candy-machine\";\r\n\r\nconst ConnectButton = styled(WalletDialogButton)``;\r\n\r\nconst CounterText = styled.span``; // add your styles here\r\n\r\nconst MintContainer = styled.div``; // add your styles here\r\n\r\nconst MintButton = styled(Button)``; // add your styles here\r\n\r\nexport interface HomeProps {\r\n  candyMachineId: anchor.web3.PublicKey;\r\n  config: anchor.web3.PublicKey;\r\n  connection: anchor.web3.Connection;\r\n  startDate: number;\r\n  treasury: anchor.web3.PublicKey;\r\n  txTimeout: number;\r\n}\r\n\r\nconst Home = (props: HomeProps) => {\r\n  const [balance, setBalance] = useState<number>();\r\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\r\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\r\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\r\n\r\n  const [itemsAvailable, setItemsAvailable] = useState(0);\r\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\r\n  const [itemsRemaining, setItemsRemaining] = useState(0);\r\n\r\n  const [alertState, setAlertState] = useState<AlertState>({\r\n    open: false,\r\n    message: \"\",\r\n    severity: undefined,\r\n  });\r\n\r\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\r\n\r\n  const wallet = useAnchorWallet();\r\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\r\n\r\n  const refreshCandyMachineState = () => {\r\n    (async () => {\r\n      if (!wallet) return;\r\n\r\n      const {\r\n        candyMachine,\r\n        goLiveDate,\r\n        itemsAvailable,\r\n        itemsRemaining,\r\n        itemsRedeemed,\r\n      } = await getCandyMachineState(\r\n        wallet as anchor.Wallet,\r\n        props.candyMachineId,\r\n        props.connection\r\n      );\r\n\r\n      setItemsAvailable(itemsAvailable);\r\n      setItemsRemaining(itemsRemaining);\r\n      setItemsRedeemed(itemsRedeemed);\r\n\r\n      setIsSoldOut(itemsRemaining === 0);\r\n      setStartDate(goLiveDate);\r\n      setCandyMachine(candyMachine);\r\n    })();\r\n  };\r\n\r\n  const onMint = async () => {\r\n    try {\r\n      setIsMinting(true);\r\n      if (wallet && candyMachine?.program) {\r\n        const mintTxId = await mintOneToken(\r\n          candyMachine,\r\n          props.config,\r\n          wallet.publicKey,\r\n          props.treasury\r\n        );\r\n\r\n        const status = await awaitTransactionSignatureConfirmation(\r\n          mintTxId,\r\n          props.txTimeout,\r\n          props.connection,\r\n          \"singleGossip\",\r\n          false\r\n        );\r\n\r\n        if (!status?.err) {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Congratulations! Mint succeeded!\",\r\n            severity: \"success\",\r\n          });\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Mint failed! Please try again!\",\r\n            severity: \"error\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      // TODO: blech:\r\n      let message = error.msg || \"Minting failed! Please try again!\";\r\n      if (!error.msg) {\r\n        if (error.message.indexOf(\"0x138\")) {\r\n        } else if (error.message.indexOf(\"0x137\")) {\r\n          message = `SOLD OUT!`;\r\n        } else if (error.message.indexOf(\"0x135\")) {\r\n          message = `Insufficient funds to mint. Please fund your wallet.`;\r\n        }\r\n      } else {\r\n        if (error.code === 311) {\r\n          message = `SOLD OUT!`;\r\n          setIsSoldOut(true);\r\n        } else if (error.code === 312) {\r\n          message = `Minting period hasn't started yet.`;\r\n        }\r\n      }\r\n\r\n      setAlertState({\r\n        open: true,\r\n        message,\r\n        severity: \"error\",\r\n      });\r\n    } finally {\r\n      if (wallet) {\r\n        const balance = await props.connection.getBalance(wallet.publicKey);\r\n        setBalance(balance / LAMPORTS_PER_SOL);\r\n      }\r\n      setIsMinting(false);\r\n      refreshCandyMachineState();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (wallet) {\r\n        const balance = await props.connection.getBalance(wallet.publicKey);\r\n        setBalance(balance / LAMPORTS_PER_SOL);\r\n      }\r\n    })();\r\n  }, [wallet, props.connection]);\r\n\r\n  useEffect(refreshCandyMachineState, [\r\n    wallet,\r\n    props.candyMachineId,\r\n    props.connection,\r\n  ]);\r\n\r\n  // useEffect(()=>{\r\n  //     MoveModal();\r\n  // },[]);\r\n\r\n  \r\n\r\n  const[days,setDays]=useState('')\r\n  const[hours,setHours]=useState('')\r\n  const[minutes,setMinutes]=useState('')\r\n  const[seconds,setSeconds]=useState('')\r\n  const[timerFinished,setTimerFinished]=useState(false)\r\n  const[visible,setVisible]=useState(false)\r\n  // Update the count down every 1 second\r\n  useEffect(()=>{\r\n    var countDownDate = new Date(Date.UTC(2021,9,29,18)).getTime();\r\n\r\n    var timer = setInterval(function() {\r\n  \r\n      // Get today's date and time\r\n      var now = new Date().getTime();\r\n     \r\n      // Find the distance between now and the count down date\r\n      var distance = countDownDate - now;\r\n    \r\n      // Time calculations for days, hours, minutes and seconds\r\n      var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n      var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n      var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n      setVisible(true)\r\n\r\n      if(seconds>9){\r\n        setSeconds(`${seconds}`)\r\n      }\r\n      else{\r\n        setSeconds(`0${seconds}`)\r\n      }\r\n      if(minutes>9){\r\n        setMinutes(`${minutes}`)\r\n      }\r\n      else{\r\n        setMinutes(`0${minutes}`)\r\n      }\r\n      if(hours>9){\r\n        setHours(`${hours}`)\r\n      }\r\n      else{\r\n        setHours(`0${hours}`)\r\n      }\r\n      if(days>9){\r\n        setDays(`${days}`)\r\n      }\r\n      else{\r\n        setDays(`0${days}`)\r\n      }\r\n  \r\n      if (distance < 0) {\r\n        clearInterval(timer);\r\n        setTimerFinished(true)\r\n      }\r\n\r\n    }, 1000);\r\n  \r\n  },[])\r\n\r\n\r\n  return (\r\n      <div className='Home'>\r\n          <Header/>\r\n          <div className='Home-body'>\r\n              <div className='Home-backgroundImageContainer'>\r\n                  <img alt=\"\" className='Home-backgroundImage' src={HomeBackgroundImage}></img>\r\n                  <div  className='home-bodyModal-Desktop' id='home-bodyModal-Desktop' >\r\n                      <h1 className='home-bodyModalTitle'>The only Sucker NFT on Solana. </h1>\r\n                      <span className='home-bodyModalText'>Total supply 600</span>\r\n                      {timerFinished===false&&visible===true?\r\n                        <div className='timer'>\r\n                          <div className='timer-child'>\r\n                            <div className='timer-childInner'>\r\n                              {days}\r\n                            </div>\r\n                            <span>DAYS</span>\r\n                          </div>\r\n                          <div className='timer-child'>\r\n                            <div className='timer-childInner'>\r\n                              {hours}\r\n                            </div>\r\n                            <span>HOURS</span>\r\n                          </div>\r\n                          <div className='timer-child'>\r\n                            <div className='timer-childInner'>\r\n                              {minutes}\r\n                            </div>\r\n                            <span>MINS</span>\r\n                          </div>\r\n                          <div className='timer-child'>\r\n                            <div className='timer-childInner'>\r\n                                {seconds}\r\n                            </div>\r\n                            <span>SECS</span>\r\n                          </div>\r\n\r\n                        </div>    \r\n                      :timerFinished===true&&visible===true?\r\n                        <main style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n                            {wallet && <a className='home-bodyModalButton' >\r\n                              {wallet && (\r\n                              <p>Wallet {shortenAddress(wallet.publicKey.toBase58() || \"\")}</p>\r\n                              )}\r\n\r\n                            \r\n                              {wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>}\r\n\r\n                              {wallet && <p>Total Available: {itemsAvailable}</p>}\r\n\r\n                              {/* {wallet && <p>Redeemed: {itemsRedeemed}</p>}\r\n\r\n                              {wallet && <p>Remaining: {itemsRemaining}</p>} */}\r\n                            </a>}\r\n                          <MintContainer>\r\n                          {!wallet ? (\r\n                          <ConnectButton style={{backgroundColor:'#eb004e'}}>Connect Wallet</ConnectButton>\r\n                          ) : (\r\n                          <MintButton\r\n                          disabled={isSoldOut || isMinting || !isActive}\r\n                          onClick={onMint}\r\n                          variant=\"contained\"\r\n                          style={{backgroundColor:'#eb004e',color:'white'}}\r\n                          >\r\n                          {isSoldOut ? (\r\n                          \"SOLD OUT\"\r\n                          ) : isActive ? (\r\n                          isMinting ? (\r\n                          <CircularProgress style={{color:'white'}}/>\r\n                          ) : (\r\n                          \"MINT\"\r\n                          )\r\n                          ) : (\r\n                          <Countdown\r\n                          date={startDate}\r\n                          onMount={({ completed }) => completed && setIsActive(true)}\r\n                          onComplete={() => setIsActive(true)}\r\n                          renderer={renderCounter}\r\n                          />\r\n                          )}\r\n                          </MintButton>\r\n                          )}\r\n                          </MintContainer>\r\n\r\n                          <Snackbar\r\n                          open={alertState.open}\r\n                          autoHideDuration={6000}\r\n                          onClose={() => setAlertState({ ...alertState, open: false })}\r\n                          >\r\n                          <Alert\r\n                          onClose={() => setAlertState({ ...alertState, open: false })}\r\n                          severity={alertState.severity}\r\n                          >\r\n                          {alertState.message}\r\n                          </Alert>\r\n                          </Snackbar>\r\n                          </main>\r\n                      // </a> \r\n                    :null}\r\n                  </div>\r\n              </div>\r\n\r\n              <div className='Home-socialDiv'>\r\n                  <div className='home-bodyModal-Mobile' >\r\n                      <h1 className='home-bodyModalTitle'>The only Sucker NFT on Solana.</h1>\r\n                      <span className='home-bodyModalText'>Total supply 600</span>\r\n                      {timerFinished===false&&visible===true?\r\n                        <div className='timer'>\r\n                          <div className='timer-child'>\r\n                            <div className='timer-childInner'>\r\n                              {days}\r\n                            </div>\r\n                            <span>DAYS</span>\r\n                          </div>\r\n                          <div className='timer-child'>\r\n                            <div className='timer-childInner'>\r\n                              {hours}\r\n                            </div>\r\n                            <span>HOURS</span>\r\n                          </div>\r\n                          <div className='timer-child'>\r\n                            <div className='timer-childInner'>\r\n                              {minutes}\r\n                            </div>\r\n                            <span>MINS</span>\r\n                          </div>\r\n                          <div className='timer-child'>\r\n                            <div className='timer-childInner'>\r\n                                {seconds}\r\n                            </div>\r\n                            <span>SECS</span>\r\n                          </div>\r\n\r\n                        </div>    \r\n                      :timerFinished===true&&visible===true?\r\n                   \r\n                         <main style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n                            {wallet && <a className='home-bodyModalButton' >\r\n                              {wallet && (\r\n                              <p>Wallet {shortenAddress(wallet.publicKey.toBase58() || \"\")}</p>\r\n                              )}\r\n\r\n                            \r\n                              {wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>}\r\n\r\n                              {wallet && <p>Total Available: {itemsAvailable}</p>}\r\n\r\n                              {/* {wallet && <p>Redeemed: {itemsRedeemed}</p>}\r\n\r\n                              {wallet && <p>Remaining: {itemsRemaining}</p>} */}\r\n                            </a>}\r\n                          <MintContainer>\r\n                          {!wallet ? (\r\n                          <ConnectButton style={{backgroundColor:'#eb004e'}}>Connect Wallet</ConnectButton>\r\n                          ) : (\r\n                          <MintButton\r\n                          disabled={isSoldOut || isMinting || !isActive}\r\n                          onClick={onMint}\r\n                          variant=\"contained\"\r\n                          style={{backgroundColor:'#eb004e',color:'white'}}\r\n                          >\r\n                          {isSoldOut ? (\r\n                          \"SOLD OUT\"\r\n                          ) : isActive ? (\r\n                          isMinting ? (\r\n                          <CircularProgress style={{color:'white'}}/>\r\n                          ) : (\r\n                          \"MINT\"\r\n                          )\r\n                          ) : (\r\n                          <Countdown\r\n                          date={startDate}\r\n                          onMount={({ completed }) => completed && setIsActive(true)}\r\n                          onComplete={() => setIsActive(true)}\r\n                          renderer={renderCounter}\r\n                          />\r\n                          )}\r\n                          </MintButton>\r\n                          )}\r\n                          </MintContainer>\r\n\r\n                          <Snackbar\r\n                          open={alertState.open}\r\n                          autoHideDuration={6000}\r\n                          onClose={() => setAlertState({ ...alertState, open: false })}\r\n                          >\r\n                          <Alert\r\n                          onClose={() => setAlertState({ ...alertState, open: false })}\r\n                          severity={alertState.severity}\r\n                          >\r\n                          {alertState.message}\r\n                          </Alert>\r\n                          </Snackbar>\r\n                          </main>\r\n                     \r\n                    :null}\r\n                  </div>\r\n                  <div>\r\n                      <h2 className='Home-socialDivText'>Social</h2>\r\n                  </div>\r\n                  <div className='Home-socialDivDivider'></div>\r\n                  <div className='Home-socialDivIconHolder' >\r\n                    <a className='Home-socialDivIcon' href='https://twitter.com/solanasuckers'>\r\n                      <img src=\"https://img.icons8.com/ios-glyphs/22/000000/twitter--v1.png\"/>\r\n                    </a>\r\n                  </div>\r\n              </div>\r\n              <Carousel/>\r\n          </div>\r\n\r\n          <Footer/>\r\n      </div>\r\n  );\r\n};\r\n\r\ninterface AlertState {\r\n  open: boolean;\r\n  message: string;\r\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\r\n}\r\n\r\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\r\n  return (\r\n    <CounterText>\r\n      {hours + (days || 0) * 24} hours, {minutes} minutes, {seconds} seconds\r\n    </CounterText>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.css\";\nimport { useMemo } from \"react\";\n\nimport Home from \"./Home\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconsole.log(treasury);\nconsole.log(config);\nconsole.log(candyMachineId);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n    },\n    overrides: {\n        MuiButtonBase: {\n            root: {\n                justifyContent: 'flex-start',\n            },\n        },\n        MuiButton: {\n            root: {\n                textTransform: undefined,\n                padding: '12px 16px',\n            },\n            startIcon: {\n                marginRight: 8,\n            },\n            endIcon: {\n                marginLeft: 8,\n            },\n        },\n    },\n});\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n        getPhantomWallet(),\n        getSlopeWallet(),\n        getSolflareWallet(),\n        getSolletWallet({ network }),\n        getSolletExtensionWallet({ network })\n    ],\n    []\n  );\n\n  return (\n      <ThemeProvider theme={theme}>\n        <ConnectionProvider endpoint={endpoint}>\n          <WalletProvider wallets={wallets} autoConnect={true}>\n            <WalletDialogProvider>\n              <Home\n                candyMachineId={candyMachineId}\n                config={config}\n                connection={connection}\n                startDate={startDateSeed}\n                treasury={treasury}\n                txTimeout={txTimeout}\n              />\n            </WalletDialogProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n\n//\n// import './App.css';\n// import HomePage from './pages/Home'\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <HomePage/>\n//     </div>\n//   );\n// }\n//\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}